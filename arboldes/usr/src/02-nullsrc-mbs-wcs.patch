diff -u src56-orig/lib/libc/citrus/citrus_none.c src/lib/libc/citrus/citrus_none.c
--- src56-orig/lib/libc/citrus/citrus_none.c	Thu Mar  7 13:12:31 2013
+++ src/lib/libc/citrus/citrus_none.c	Wed Oct  1 12:45:17 2014
@@ -93,6 +93,10 @@
 	/* dst may be NULL */
 	/* pspriv appears to be unused */
 
+	if (src == NULL || *src == NULL) {
+		errno = EINVAL;
+		return ((size_t)-1);
+	}
 	if (dst == NULL)
 		return strnlen(*src, nmc);
 
@@ -138,6 +142,10 @@
 	/* dst may be NULL */
 	/* pspriv appears to be unused */
 
+	if (src == NULL || *src == NULL) {
+		errno = EINVAL;
+		return ((size_t)-1);
+	}
 	if (dst == NULL) {
 		for (i = 0; i < nwc; i++) {
 			wchar_t wc = (*src)[i];
diff -u src56-orig/lib/libc/citrus/citrus_utf8.c src/lib/libc/citrus/citrus_utf8.c
--- src56-orig/lib/libc/citrus/citrus_utf8.c	Fri Sep 19 13:07:15 2014
+++ src/lib/libc/citrus/citrus_utf8.c	Wed Oct  1 12:44:01 2014
@@ -194,6 +194,10 @@
 
 	us = (struct _utf8_state *)pspriv;
 
+	if (src == NULL || *src == NULL) {
+        	errno = EINVAL;
+                return ((size_t)-1);
+        }
 	if (dst == NULL) {
 		/*
 		 * The fast path in the loop below is not safe if an ASCII
@@ -346,6 +350,10 @@
 		return ((size_t)-1);
 	}
 
+	if (src == NULL || *src == NULL) {
+        	errno = EINVAL;
+                return ((size_t)-1);
+        }
 	if (dst == NULL) {
 		for (i = o = 0; i < nwc; i++, o += r) {
 			wchar_t wc = (*src)[i];
diff -u src56-orig/lib/libc/locale/mbsrtowcs.3 src/lib/libc/locale/mbsrtowcs.3
--- src56-orig/lib/libc/locale/mbsrtowcs.3	Tue Jun  4 22:39:22 2013
+++ src/lib/libc/locale/mbsrtowcs.3	Wed Oct  1 13:34:47 2014
@@ -151,8 +151,8 @@
 is a null pointer, the value returned is the number of elements to contain
 the whole string converted, except for a terminating null wide character.
 .It (size_t)-1
-The array indirectly pointed to by
 .Fa src
+is NULL or points to NULL or to an array that
 contains a byte sequence forming invalid character.
 In this case,
 .Va errno
@@ -167,9 +167,8 @@
 functions may return the following errors:
 .Bl -tag -width Er
 .It Bq Er EILSEQ
-The pointer pointed to by
 .Fa src
-points to an invalid or incomplete multibyte character.
+is NULL or points to NULL or to an invalid or incomplete multibyte character.
 .It Bq Er EINVAL
 .Fa ps
 points to an invalid or uninitialized mbstate_t object.
diff -u src56-orig/lib/libc/locale/wcsrtombs.3 src/lib/libc/locale/wcsrtombs.3
--- src56-orig/lib/libc/locale/wcsrtombs.3	Tue Jun  4 22:39:22 2013
+++ src/lib/libc/locale/wcsrtombs.3	Wed Oct  1 13:37:31 2014
@@ -153,7 +153,7 @@
 will not be null-terminated.
 .It (size_t)-1
 .Fa src
-points to the string containing invalid wide character.
+is NULL or points to NULL or to a string containing invalid wide character.
 In this case,
 .Va errno
 is set to indicate the error.
@@ -168,7 +168,7 @@
 .Bl -tag -width Er
 .It Bq Er EILSEQ
 .Fa src
-points to the string containing an invalid wide character.
+is NULL or points to NULL or to a string containing an invalid wide character.
 .It Bq Er EINVAL
 .Fa ps
 points to an invalid or uninitialized mbstate_t object.
