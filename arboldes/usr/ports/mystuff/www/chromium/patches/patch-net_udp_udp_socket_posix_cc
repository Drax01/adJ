<<<<<<< HEAD
$OpenBSD: patch-net_udp_udp_socket_posix_cc,v 1.6 2016/10/26 06:22:08 robert Exp $
--- net/udp/udp_socket_posix.cc.orig.port	Wed Oct 12 21:03:01 2016
+++ net/udp/udp_socket_posix.cc	Wed Oct 19 12:56:07 2016
@@ -48,7 +48,7 @@ const int kBindRetries = 10;
=======
$OpenBSD: patch-net_udp_udp_socket_posix_cc,v 1.4 2016/05/27 06:28:21 robert Exp $
--- net/udp/udp_socket_posix.cc.orig.port	Wed May 25 21:01:04 2016
+++ net/udp/udp_socket_posix.cc	Thu May 26 08:09:47 2016
@@ -45,7 +45,7 @@ const int kBindRetries = 10;
>>>>>>> 7e8581aadfac3773e05d83a662dae23a33c44e10
 const int kPortStart = 1024;
 const int kPortEnd = 65535;
 
-#if defined(OS_MACOSX)
+#if defined(OS_MACOSX) || defined(OS_BSD)
 
 // Returns IPv4 address in network order.
 int GetIPv4AddressFromIndex(int socket, uint32_t index, uint32_t* address) {
<<<<<<< HEAD
@@ -672,7 +672,7 @@ int UDPSocketPosix::SetMulticastOptions() {
=======
@@ -603,7 +603,7 @@ int UDPSocketPosix::SetMulticastOptions() {
>>>>>>> 7e8581aadfac3773e05d83a662dae23a33c44e10
   if (multicast_interface_ != 0) {
     switch (addr_family_) {
       case AF_INET: {
-#if !defined(OS_MACOSX)
+#if !defined(OS_MACOSX) && !defined(OS_BSD)
         ip_mreqn mreq;
         mreq.imr_ifindex = multicast_interface_;
         mreq.imr_address.s_addr = htonl(INADDR_ANY);
<<<<<<< HEAD
@@ -747,7 +747,7 @@ int UDPSocketPosix::JoinGroup(const IPAddress& group_a
=======
@@ -678,7 +678,7 @@ int UDPSocketPosix::JoinGroup(const IPAddress& group_a
>>>>>>> 7e8581aadfac3773e05d83a662dae23a33c44e10
       if (addr_family_ != AF_INET)
         return ERR_ADDRESS_INVALID;
 
-#if !defined(OS_MACOSX)
+#if !defined(OS_MACOSX) && !defined(OS_BSD)
       ip_mreqn mreq;
       mreq.imr_ifindex = multicast_interface_;
       mreq.imr_address.s_addr = htonl(INADDR_ANY);
