<<<<<<< HEAD
$OpenBSD: patch-chrome_app_chrome_main_delegate_cc,v 1.31 2016/09/01 16:28:11 robert Exp $
--- chrome/app/chrome_main_delegate.cc.orig.port	Thu Sep  1 00:03:26 2016
+++ chrome/app/chrome_main_delegate.cc	Thu Sep  1 11:12:18 2016
@@ -84,7 +84,7 @@
 #include "chrome/app/chrome_crash_reporter_client.h"
=======
$OpenBSD: patch-chrome_app_chrome_main_delegate_cc,v 1.29 2016/05/27 06:28:20 robert Exp $
--- chrome/app/chrome_main_delegate.cc.orig.port	Thu May 26 08:15:51 2016
+++ chrome/app/chrome_main_delegate.cc	Thu May 26 08:18:13 2016
@@ -80,7 +80,7 @@
 #include <signal.h>
>>>>>>> 7e8581aadfac3773e05d83a662dae23a33c44e10
 #endif
 
-#if !defined(DISABLE_NACL) && defined(OS_LINUX)
+#if !defined(DISABLE_NACL) && defined(OS_LINUX) && !defined(OS_BSD)
 #include "components/nacl/common/nacl_paths.h"
 #include "components/nacl/zygote/nacl_fork_delegate_linux.h"
 #endif
<<<<<<< HEAD
@@ -119,7 +119,7 @@
=======
@@ -115,7 +115,7 @@
>>>>>>> 7e8581aadfac3773e05d83a662dae23a33c44e10
 #include "components/crash/content/app/breakpad_linux.h"
 #endif
 
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
 #include "base/environment.h"
 #endif
 
<<<<<<< HEAD
@@ -161,7 +161,7 @@ base::LazyInstance<ChromeContentBrowserClient> g_chrom
=======
@@ -151,7 +151,7 @@ base::LazyInstance<ChromeContentBrowserClient> g_chrom
>>>>>>> 7e8581aadfac3773e05d83a662dae23a33c44e10
     LAZY_INSTANCE_INITIALIZER;
 #endif
 
-#if defined(OS_POSIX)
+#if defined(OS_POSIX) && !defined(OS_BSD)
 base::LazyInstance<ChromeCrashReporterClient>::Leaky g_chrome_crash_client =
     LAZY_INSTANCE_INITIALIZER;
 #endif
<<<<<<< HEAD
@@ -278,7 +278,7 @@ static void AdjustLinuxOOMScore(const std::string& pro
=======
@@ -268,7 +268,7 @@ static void AdjustLinuxOOMScore(const std::string& pro
>>>>>>> 7e8581aadfac3773e05d83a662dae23a33c44e10
 // and resources loaded.
 bool SubprocessNeedsResourceBundle(const std::string& process_type) {
   return
-#if defined(OS_POSIX) && !defined(OS_MACOSX)
+#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_BSD)
       // The zygote process opens the resources for the renderers.
       process_type == switches::kZygoteProcess ||
 #endif
<<<<<<< HEAD
@@ -330,7 +330,7 @@ void HandleHelpSwitches(const base::CommandLine& comma
=======
@@ -320,7 +320,7 @@ void HandleHelpSwitches(const base::CommandLine& comma
>>>>>>> 7e8581aadfac3773e05d83a662dae23a33c44e10
 }
 #endif
 
-#if !defined(OS_MACOSX) && !defined(OS_ANDROID)
+#if !defined(OS_MACOSX) && !defined(OS_ANDROID) && !defined(OS_BSD)
 void SIGTERMProfilingShutdown(int signal) {
   Profiling::Stop();
   struct sigaction sigact;
<<<<<<< HEAD
@@ -364,7 +364,7 @@ void InitializeUserDataDir() {
=======
@@ -354,7 +354,7 @@ void InitializeUserDataDir() {
>>>>>>> 7e8581aadfac3773e05d83a662dae23a33c44e10
   std::string process_type =
       command_line->GetSwitchValueASCII(switches::kProcessType);
 
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) || defined(OS_BSD)
   // On Linux, Chrome does not support running multiple copies under different
   // DISPLAYs, so the profile directory can be specified in the environment to
   // support the virtual desktop use-case.
<<<<<<< HEAD
@@ -703,7 +703,7 @@ void ChromeMainDelegate::PreSandboxStartup() {
=======
@@ -684,7 +684,7 @@ void ChromeMainDelegate::PreSandboxStartup() {
>>>>>>> 7e8581aadfac3773e05d83a662dae23a33c44e10
   std::string process_type =
       command_line.GetSwitchValueASCII(switches::kProcessType);
 
-#if defined(OS_POSIX)
+#if defined(OS_POSIX) && !defined(OS_BSD)
   crash_reporter::SetCrashReporterClient(g_chrome_crash_client.Pointer());
 #endif
 
<<<<<<< HEAD
@@ -836,7 +836,7 @@ void ChromeMainDelegate::PreSandboxStartup() {
=======
@@ -805,7 +805,7 @@ void ChromeMainDelegate::PreSandboxStartup() {
>>>>>>> 7e8581aadfac3773e05d83a662dae23a33c44e10
   chrome::InitializePDF();
 #endif
 
-#if defined(OS_POSIX) && !defined(OS_MACOSX)
+#if defined(OS_POSIX) && !defined(OS_MACOSX) && !defined(OS_BSD)
   // Zygote needs to call InitCrashReporter() in RunZygote().
   if (process_type != switches::kZygoteProcess) {
 #if defined(OS_ANDROID)
<<<<<<< HEAD
@@ -964,7 +964,7 @@ bool ChromeMainDelegate::DelaySandboxInitialization(
=======
@@ -933,7 +933,7 @@ bool ChromeMainDelegate::DelaySandboxInitialization(
>>>>>>> 7e8581aadfac3773e05d83a662dae23a33c44e10
 #endif
   return process_type == switches::kRelauncherProcess;
 }
-#elif defined(OS_POSIX) && !defined(OS_ANDROID)
+#elif defined(OS_POSIX) && !defined(OS_ANDROID) && !defined(OS_BSD)
 void ChromeMainDelegate::ZygoteStarting(
     ScopedVector<content::ZygoteForkDelegate>* delegates) {
 #if defined(OS_CHROMEOS)
