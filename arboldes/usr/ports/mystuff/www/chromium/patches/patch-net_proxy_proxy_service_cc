<<<<<<< HEAD
$OpenBSD: patch-net_proxy_proxy_service_cc,v 1.13 2016/10/26 06:22:08 robert Exp $
--- net/proxy/proxy_service.cc.orig.port	Wed Oct 12 21:03:01 2016
+++ net/proxy/proxy_service.cc	Wed Oct 19 12:56:07 2016
=======
$OpenBSD: patch-net_proxy_proxy_service_cc,v 1.11 2016/05/27 06:28:21 robert Exp $
--- net/proxy/proxy_service.cc.orig.port	Wed May 25 21:01:04 2016
+++ net/proxy/proxy_service.cc	Thu May 26 08:09:47 2016
>>>>>>> 7e8581aadfac3773e05d83a662dae23a33c44e10
@@ -47,7 +47,7 @@
 #elif defined(OS_MACOSX)
 #include "net/proxy/proxy_config_service_mac.h"
 #include "net/proxy/proxy_resolver_mac.h"
-#elif defined(OS_LINUX) && !defined(OS_CHROMEOS)
+#elif (defined(OS_BSD) || defined(OS_LINUX)) && !defined(OS_CHROMEOS)
 #include "net/proxy/proxy_config_service_linux.h"
 #elif defined(OS_ANDROID)
 #include "net/proxy/proxy_config_service_android.h"
<<<<<<< HEAD
@@ -1531,7 +1531,7 @@ ProxyService::CreateSystemProxyConfigService(
=======
@@ -1513,7 +1513,7 @@ scoped_ptr<ProxyConfigService> ProxyService::CreateSys
>>>>>>> 7e8581aadfac3773e05d83a662dae23a33c44e10
              << "profile_io_data.cc::CreateProxyConfigService and this should "
              << "be used only for examples.";
   return base::WrapUnique(new UnsetProxyConfigService);
-#elif defined(OS_LINUX)
+#elif defined(OS_LINUX) || defined(OS_BSD)
   std::unique_ptr<ProxyConfigServiceLinux> linux_config_service(
       new ProxyConfigServiceLinux());
 
