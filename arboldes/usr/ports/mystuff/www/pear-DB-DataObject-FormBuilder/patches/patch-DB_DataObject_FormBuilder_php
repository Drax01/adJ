$adJ$
--- DB/DataObject/FormBuilder.php.orig	Mon Apr  9 12:33:45 2012
+++ DB/DataObject/FormBuilder.php	Tue May 28 16:48:24 2013
@@ -1769,10 +1769,12 @@ class DB_DataObject_FormBuilder
         $this->_form->_finishForm();
 
         // Assign default values to the form
-        $fixedFormValues = array();
-        foreach ($formValues as $key => $value) {
-            $fixedFormValues[$this->getFieldName($key)] = $value;
-        }
+	$fixedFormValues = array();
+	if (isset($formValues) && is_array($formValues)) {
+		foreach ($formValues as $key => $value) {
+			$fixedFormValues[$this->getFieldName($key)] = $value;
+		}
+	}
         $this->_form->_setFormDefaults($fixedFormValues);
         return $this->_form->getForm();
     }
@@ -2006,12 +2008,18 @@ class DB_DataObject_FormBuilder
             } else {
                 $ret .= ', ';
             }
-            if (isset($do->$field)) {
+            $ffield = explode(',', $field);
+            if (isset($do->$ffield[0])) {
                 if ($linkDisplayLevel > $level && isset($links[$field])) {
-                    /*list ($linkTable, $linkField) = $links[$field];
+                    $tc = explode(":", $links[$field]);
+                    $linkTable = $tc[0];
+                    $dfield = explode(",", $tc[1]);
                     $subDo = DB_DataObject::factory($linkTable);
-                    $subDo->$linkField = $do->$field;*/
-                    if ($subDo = $do->getLink($field)) {
+                    for($i = 0; $i < count($ffield); $i++) {
+                        $subDo->$dfield[$i] = $do->$ffield[$i];
+                    }
+                    $subDo->find(1);
+                    if ($subDo != null && !PEAR::isError($subDo)) {
                         if (isset($this) && is_a($this, 'DB_DataObject_FormBuilder')) {
                             $ret .= '('.$this->getDataObjectString($subDo, false, $linkDisplayLevel, $level + 1).')';
                         } else {
@@ -2095,7 +2103,7 @@ class DB_DataObject_FormBuilder
         $opts = DB_DataObject::factory($table);
         if (is_a($opts, 'db_dataobject')) {
             if ($this->isCallableAndExists($this->prepareLinkedDataObjectCallback)) {
-                call_user_func_array($this->prepareLinkedDataObjectCallback, array(&$opts, $field));
+                call_user_func_array($this->prepareLinkedDataObjectCallback, array(&$opts, &$field));
             }
             if ($valueField === false) {
                 $valueField = $this->_getPrimaryKey($opts);
